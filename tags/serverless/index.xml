<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Serverless on ServiceMesher</title>
    <link>http://www.servicemesher.com/tags/serverless/</link>
    <description>Recent content in Serverless on ServiceMesher</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 12 Mar 2019 11:17:13 +0800</lastBuildDate>
    
	<atom:link href="http://www.servicemesher.com/tags/serverless/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Knative 入门系列2：serving 介绍</title>
      <link>http://www.servicemesher.com/blog/knative-serving/</link>
      <pubDate>Tue, 12 Mar 2019 11:17:13 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/knative-serving/</guid>
      <description>译者：杨铁党、孙海洲、邱世达、宋净超、徐鹏 Knative 是一个基于 Kubernetes 的，用于构建、部署和管理现代 serverless 应用的平台。Getting Started with Knative 是一本由 Pivotal 公司赞助 O’</description>
    </item>
    
    <item>
      <title>Knative 入门系列1：knative 概述</title>
      <link>http://www.servicemesher.com/blog/knative-overview/</link>
      <pubDate>Mon, 11 Mar 2019 12:23:31 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/knative-overview/</guid>
      <description>译者：陈佳栋、宋净超、孙海洲、徐鹏、邱世达 Knative 是一个基于 Kubernetes 的，用于构建、部署和管理现代 serverless 应用的平台。Getting Started with Knative 是一本由 Pivotal 公司赞助 O’</description>
    </item>
    
    <item>
      <title>Knative：精简代码之道</title>
      <link>http://www.servicemesher.com/blog/knative-whittling-down-the-code/</link>
      <pubDate>Fri, 01 Mar 2019 10:40:18 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/knative-whittling-down-the-code/</guid>
      <description>[编者案] Knative 作为 Google 发起开源的 serverless 项目，给我们提供了一套简单易用的 serverless 开源解决方案。本文作者直观地向我们展示了如何使用Knative来一步一步逐渐</description>
    </item>
    
    <item>
      <title>Knative Eventing in-memory-channel实现原理解析</title>
      <link>http://www.servicemesher.com/blog/knative-eventing-in-memory-channel-deep-dive/</link>
      <pubDate>Fri, 22 Feb 2019 14:08:59 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/knative-eventing-in-memory-channel-deep-dive/</guid>
      <description>关于 Knative eventing 的基本概念可以参考: https://github.com/knative/docs/blob/master/eventing/README.md https://thenewstack.io/knative-enables-portable-serverless-platforms-on-kubernetes-for-any-cloud/ 本文不对基本概念做介绍，本文主要是基于 Kubernetes Event Source example 为例分析 in-memory-channel 的实现原理。 在运行 Kubernetes Event Source example 之前要保证已经安装了 in-memory-channel , 下</description>
    </item>
    
    <item>
      <title>Knative：重新定义 serverless</title>
      <link>http://www.servicemesher.com/blog/knative-redefine-serverless/</link>
      <pubDate>Wed, 02 Jan 2019 11:35:38 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/knative-redefine-serverless/</guid>
      <description>大家好，今天给大家来的演讲专题是“Knative：重新定义Serverless”, 我是来自蚂蚁金服中间件的敖小剑。 这是我的个人资料，有兴趣的</description>
    </item>
    
    <item>
      <title>Serverless 平台 knative 简介</title>
      <link>http://www.servicemesher.com/blog/knative-serverless-platform/</link>
      <pubDate>Tue, 18 Dec 2018 19:43:14 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/knative-serverless-platform/</guid>
      <description>本文作者：吴伟，蚂蚁金服系统部技术专家，本文转载自其博客。 knative 是谷歌开源的 serverless 架构方案，旨在提供一套简单易用的 serverless 方案，把 serverless 标准化。目前参与的公司</description>
    </item>
    
    <item>
      <title>Serverless Jenkins 和 Jenkins X</title>
      <link>http://www.servicemesher.com/blog/serverless-jenkins-with-jenkins-x/</link>
      <pubDate>Tue, 04 Dec 2018 14:47:13 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/serverless-jenkins-with-jenkins-x/</guid>
      <description>Jenkins服务来源于创建自2004年的Hudson。在软件行业中，Jenkins已经是家喻户晓的明星产品，并且已经是CI和CD的领头羊。</description>
    </item>
    
    <item>
      <title>Kubernetes（K8s）的无服务器框架的评估</title>
      <link>http://www.servicemesher.com/blog/evaluation-of-serverless-frameworks-for-kbe/</link>
      <pubDate>Thu, 08 Nov 2018 13:20:46 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/evaluation-of-serverless-frameworks-for-kbe/</guid>
      <description>评估Kubernetes（K8s）的无服务器框架 Rancher 1.6和Rancher 2.0底层容器编排引擎的术语和概念略微有所不同。想要了解这些差异就需</description>
    </item>
    
    <item>
      <title>Serverless vs Container——开发人员向左，DevOps向右</title>
      <link>http://www.servicemesher.com/blog/serverless-vs-containers/</link>
      <pubDate>Sun, 16 Sep 2018 16:49:58 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/serverless-vs-containers/</guid>
      <description>让我们来看看Serverless与容器的采用率、工具支持以及围绕Serverless和容器化的其他争论。 在Serverless和容器中，我们</description>
    </item>
    
    <item>
      <title>Google加持Istio—这可能比Kubernetes和Serverless产生更大影响力</title>
      <link>http://www.servicemesher.com/blog/google-istio-bigger-kubernetes-serverless/</link>
      <pubDate>Mon, 20 Aug 2018 16:14:16 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/google-istio-bigger-kubernetes-serverless/</guid>
      <description>Google Cloud采用了Istio服务网格技术来管理微服务，这可能比Kubernetes和无服务器产生更大的影响。 随着现代数字计算基础设施的不断发</description>
    </item>
    
    <item>
      <title>基于Kubernetes和Istio的Serverless框架Knative解析之Autoscaler</title>
      <link>http://www.servicemesher.com/blog/knative-serving-autoscaler-single-tenancy-deep-dive/</link>
      <pubDate>Tue, 07 Aug 2018 22:20:49 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/knative-serving-autoscaler-single-tenancy-deep-dive/</guid>
      <description>我们都是知道Kubernetes中个资源对象叫 autoscaler，该对象在serverless架构中更是不可或缺，有了它可以负责应用的自动</description>
    </item>
    
    <item>
      <title>使用Istio控制Serverless架构Fn Project中的函数间流量路由</title>
      <link>http://www.servicemesher.com/blog/traffic-routing-between-fn-functions-using-fn-project-and-istio-fd/</link>
      <pubDate>Wed, 04 Jul 2018 17:44:01 +0800</pubDate>
      
      <guid>http://www.servicemesher.com/blog/traffic-routing-between-fn-functions-using-fn-project-and-istio-fd/</guid>
      <description>在本文中，我将解释如何在 Fn 函数之间使用 Istio 服务网格实现基于版本的流量路由。 我将首先解释 Istio 路由的基础知识以及将 Fn 部署和运行在 Kubernetes 上的方式。最后，我</description>
    </item>
    
  </channel>
</rss>